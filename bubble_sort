#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <math.h>

int size;
int arr[100000];
clock_t start, end;
int comp_count = 0, swap_count = 0;
double total_time_taken = 0;

void bubbleSort() {
    comp_count = 0;
    swap_count = 0;
    start = clock();

    for (int i = 0; i < size - 1; i++) {
        for (int j = 0; j < size - i - 1; j++) {
            double comp_s_time = (double)clock() / CLOCKS_PER_SEC;
            comp_count++;

            if (arr[j] > arr[j + 1]) {
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;

                double swap_s_time = (double)clock() / CLOCKS_PER_SEC;
                swap_count++;
                double swap_time = (double)clock() / CLOCKS_PER_SEC - swap_s_time;
                total_time_taken += swap_time;
            }
            double comp_time = (double)clock() / CLOCKS_PER_SEC - comp_s_time;
            total_time_taken += comp_time;
        }
    }

    end = clock();
    double total_time = ((double)(end - start)) / CLOCKS_PER_SEC;
    printf("Total comparisons executed: %d\n", comp_count);
    printf("Total swaps executed: %d\n", swap_count);
    printf("Total time taken for sorting: %f seconds\n", total_time);
    printf("Total time taken for comparisons: %f seconds\n", total_time_taken);
}

int main() {
    printf("\nEnter the size of the array: ");
    scanf("%d", &size);

    srand(time(0));
    printf("\nGenerated Array: ");
    for (int i = 0; i < size; i++) {
        arr[i] = rand() % 2000;
        printf("%d ", arr[i]);
    }
    printf("\n");

    bubbleSort();

    printf("\nSorted Array: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    return 0;
}
