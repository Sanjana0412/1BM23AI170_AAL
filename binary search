#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <math.h>

int size;
int arr[100000];
clock_t start, end;

void binarysearch(int target_index) {
    int left = 1, right = size , count = 0;
    start = clock();
    int target = arr[target_index];

    while (left <= right) {
        count++;
        int mid = left + (right - left) / 2;

        if (arr[mid] == target) {
            end = clock();
            double time_taken = ((double)(end - start)) / CLOCKS_PER_SEC;
            printf("The count is %d\n", count);
            printf("Time taken: %f seconds\n", time_taken);
            printf("Best case (O(1)): %f\n", log(target + 1) / count);
            printf("Average case (O(log n)): %f\n", (double)log2(size) / count);
            printf("Worst case (O(log n)): %f\n", (double)log2(size) / count);
            return;
        }
        if (arr[mid] < target)
            left = mid + 1;
        else
            right = mid - 1;
    }
    printf("Element not found.\n");
}

int main() {
    printf("\nEnter the size of the array: ");
    scanf("%d", &size);

    srand(time(0));
    printf("\nGenerated Array: ");
    for (int i = 1; i <=size; i++) {
        arr[i] = rand() % 2000;
    }

    // Sort the array for binary search
    for (int i = 1; i < size; i++) {
        for (int j = 1; j < size - i; j++) {
            if (arr[j] > arr[j + 1]) {
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }

    for (int i = 1; i <= size; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    while (1) {
        int choice;
        printf("Enter 1 to search or 2 to quit: ");
        scanf("%d", &choice);

        if (choice == 2) {
            break;
        } else if (choice == 1) {
            int target_index;
            printf("Enter the search index : ");
            scanf("%d", &target_index);
            if (target_index > 0 && target_index <=size) {
                binarysearch(target_index);
            } else {
                printf("Invalid index. Try again.\n");
            }
        } else {
            printf("Invalid choice. Try again.\n");
        }
    }

    return 0;
}
